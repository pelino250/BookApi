version: '3.8'

services:
  # Django application service
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: bookapi:dev
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8080:8000"
    env_file:
      - .env
    environment:
      - DJANGO_DEBUG=True
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      - db
      - redis
    restart: unless-stopped

  # PostgreSQL database service
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-bookapi_db}
      - POSTGRES_USER=${POSTGRES_USER:-bookapi_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password123}
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-bookapi_user} -d ${POSTGRES_DB:-bookapi_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  static_volume:
