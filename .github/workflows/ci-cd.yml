name: 'Build, Test, and Deploy'

# Run this workflow on every push and pull request to the main and develop branches
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    name: 'Build and Test Docker Image'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: bookapi:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests in Docker container
        run: |
          docker run --rm bookapi:test pytest

      - name: Run tests with coverage
        run: |
          docker run --rm bookapi:test pytest --cov=. --cov-report=xml:/app/coverage.xml
          docker cp $(docker create --rm bookapi:test):/app/coverage.xml ./coverage.xml

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  deploy:
    name: 'Deploy to Azure'
    runs-on: ubuntu-latest

    # This job depends on the 'build-and-test' job
    needs: build-and-test

    # This condition ensures deployment ONLY happens on a push to the 'develop' branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    permissions:
      id-token: write # Required for Azure login
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7A136FF9F6FB44A8A2518321E33071A9 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_905F6342152A43EAB8C1EFA2ABF447AE }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_807F775833C84DF0AB570A6FDC9F6825 }}

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image to ACR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/bookapi:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'book-api'
          slot-name: 'Production'
          images: ${{ secrets.ACR_LOGIN_SERVER }}/bookapi:${{ github.sha }}
